version: '3.8'
# Minimal version Docker is 19.03.0+, https://docs.docker.com/compose/compose-file/.
# docker network create nextcloud

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: ${RESTART}
    command:
      - "--log.level=DEBUG"
      - "--api=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.${PROVIDER}.acme.dnschallenge=true"
      - "--certificatesresolvers.${PROVIDER}.acme.dnschallenge.provider=${PROVIDER}"
      - "--certificatesresolvers.${PROVIDER}.acme.dnschallenge.delayBeforeCheck=0"
      - "--certificatesresolvers.${PROVIDER}.acme.dnschallenge.resolvers=${RESOLVER}"
      - "--certificatesresolvers.${PROVIDER}.acme.email=${EMAIL}"
      - "--certificatesresolvers.${PROVIDER}.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${HOSTNAME}-traefik.${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certResolver=${PROVIDER}"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=api-auth"
      # get md5 from htpasswd or http://www.htaccesstools.com/htpasswd-generator/
      # and then double all $ to $$ to avoid docker-compose
      - "traefik.http.middlewares.api-auth.basicauth.users=admin:$$2y$$10$$uWVUjh7i1g43e5xzBEzjYeJYpT4S9omilXI8UwD961AkYnHpvunqG"
      - "traefik.http.middlewares.test-ipwhitelist.ipwhitelist.sourcerange=127.0.0.1/32, 10.200.60.0/24, 10.200.65.0/24"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - nextcloud
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
    environment: 
      - TZ
      - AWS_ACCESS_KEY_ID
      - AWS_REGION
      - AWS_SECRET_ACCESS_KEY

  db:
    restart: ${RESTART}
    container_name: postgres_nextcloud
    image: postgres:13.3
    networks:
      - nextcloud
    environment:
    - POSTGRES_USER
    - POSTGRES_PASSWORD
    - POSTGRES_DB
    volumes:
    - /var/lib/postgresql/data:/var/lib/postgresql/data

  redis:
    image: redis:6.2.4
    container_name: redis_nextcloud
    restart: ${RESTART}
    networks:
      - nextcloud
    volumes:
      - /var/lib/redis:/var/lib/redis

  nextcloud:
    container_name: nextcloud_nextcloud
    image: nextcloud:21.0.2-apache
    restart: ${RESTART}
    networks:
      - nextcloud
    depends_on:
      - redis
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud,nextcloud_redirect"
      - "traefik.http.routers.nextcloud.tls.certresolver=${PROVIDER}"
      - "traefik.http.routers.nextcloud.rule=Host(`${HOSTNAME}.${DOMAIN}`)"
      - "traefik.http.middlewares.nextcloud.headers.customFrameOptionsValue=ALLOW-FROM https://${HOSTNAME}.${DOMAIN}"
      - "traefik.http.middlewares.nextcloud.headers.contentSecurityPolicy=frame-ancestors 'self' ${HOSTNAME}.${DOMAIN} *.${DOMAIN}"
      - "traefik.http.middlewares.nextcloud.headers.stsSeconds=155520011"
      - "traefik.http.middlewares.nextcloud.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.nextcloud.headers.stsPreload=true"
      - "traefik.http.middlewares.nextcloud_redirect.redirectregex.regex=/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloud_redirect.redirectregex.replacement=/remote.php/dav/"
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - NEXTCLOUD_ADMIN_USER
      - NEXTCLOUD_ADMIN_PASSWORD
      - REDIS_HOST
      - NEXTCLOUD_TRUSTED_DOMAINS
      - TRUSTED_PROXIES
      - OVERWRITEPROTOCOL
    volumes:
      - /var/www/html:/var/www/html

networks:
  nextcloud:
    external: true

volumes:
    letsencrypt:
      driver: local